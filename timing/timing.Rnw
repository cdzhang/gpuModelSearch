\documentclass{article}
\usepackage{graphicx, color, amssymb, amsmath, bm, rotating, graphics,
epsfig, multicol}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{url}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\hypersetup{
 pdfstartview={XYZ null null 1}}
\usepackage{breakurl}
\begin{document}

% \SweaveOpts{fig.path='figure/', fig.align='center', fig.show='hold'}

<<setup, include=FALSE, cache=FALSE>>=
options(replace.assign=TRUE,width=90)
@


\title{R Wrapper vs. C Wrapper}


\author{Matt Simpson}

\maketitle

In order to assess how long it takes to fit all possible sub models
using either the R or C wrappers, I varied the number of observations
($n$) and the number of possible covariates ($k$) among a number of
levels. Table \ref{sam} contains all combinations of factors I sampled
along with their sample size - 5 in all cases.

<<sample-size, results=tex, echo=F>>=
library(ggplot2)
library(xtable)
rtime <- read.csv("rfittime.csv")
ctime <- read.csv("cfittime.csv")
ratdata <- rtime
rtime$wrap <- "R"
ctime$wrap <- "C"
data <- rbind(rtime, ctime)

ratdata[,3:5] <- rtime[,3:5] / ctime[,3:5]
colnames(ratdata)[3:5] <- c("usrratio", "sysratio", "elapsratio")


leng <- aggregate(data[,3], list(n=data$n,k=data$k,wrap=data$wrap), "length")
colnames(leng)[4] <- "sample.size"
leng$n <- as.integer(leng$n)
xtable(leng, caption="Sample sizes of various combinations of factors, including number of observations (n), number of possible covariates (k), and which wrapper was used (wrap)", label="sam")
@

\begin{figure}
  \centering
<<k10, fig.width=4, fig.height=4, out.width='.7\\textwidth', echo=F>>=
mns <- aggregate(data[,3:5], list(n=data$n,k=data$k,wrap=data$wrap), "mean")
qplot(data=mns[mns$k==10,],x=n, y=elapstime, color=wrap, geom="line", log="x")
@
\caption{Time to fit (in seconds) vs. $n$ (log scale) by wrapper type.}
\label{k10}
\end{figure}

First we plot the time to fit all possible models by sample size
$n$ in figure \ref{k10}, with the number of covariates ($k$)
held constant at 10. As expected, time to fit increases as the sample
size increases. For the entire domain, it appears C wrapper fits all
possible models slightly faster, though it's hard to tell at some
values of $n$. Plotting the ratio of R wrapper fit time to C wrapper fit
time reveals a bit more in figure \ref{k10rat}. For sample sizes
of 100 and 1000, the C wrapper is about
\Sexpr{round(ratmns[ratmns$k==10 & ratmns$n==100, 5],2)} times faster
than the R wrapper. This ratio steadily increases to nearly
\Sexpr{round(ratmns[ratmns$k==10 & ratmns$n==10000, 5],2)} times
faster at $n=10,000$ before falling to roughly
\Sexpr{round(ratmns[ratmns$k==10 & ratmns$n==500000, 5],2)} times
faster at $n=50,000$ and then increasing slowly to about
\Sexpr{round(ratmns[ratmns$k==10 & ratmns$n==2000000,5],2)} times
faster at $n=2,000,000$.

\begin{figure}
  \centering
<<k10rat, fig.width=4, fig.height=4, out.width='.7\\textwidth', echo=F>>=
ratmns <- aggregate(ratdata[,3:5], list(n=ratdata$n,k=ratdata$k), "mean")
qplot(data=ratmns[ratmns$k==10,],x=n, y=elapsratio, geom="line", log="x")
@
\caption{Ratio of R wrapper time to fit over C wrapper time to fit
  vs. n (log scale) for $k=10$.}
\label{k10rat}
\end{figure}


The data for $k=5$ tell a different story in figure \ref{k5}: the C
wrapper is slightly faster than the R wrapper at small sample sizes,
but as $n$ increases the R wrapper eventually becomes faster. The
difference is small though; the larger disparity
is between the fit times of all possible sub models with $k=5$ and
$k=10$ - a difference of over an order of magnitude. Figure
\ref{k5rat} shows the same phenomenon in terms of ratios. The C
wrapper starts out only about \Sexpr{round(ratmns[ratmns$k==5 &
  ratmns$n==100, 5],2)} times faster than the R wrapper at $n=100$,
but increases to \Sexpr{round(ratmns[ratmns$k==5 & ratmns$n==10000, 5],2)} times
faster at $n=10,000$. Eventually, the speed of the C wrapper falls to
\Sexpr{round(ratmns[ratmns$k==5 & ratmns$n==2000000, 5],2)} times as
fast as the R wrapper at $n=2,000,000$. So for large $n$, it appears
that the R wrapper outperforms the C wrapper.


Figure \ref{n100} tells the story we expect when $n$ is held constant
at 100 and k increase. The Cwrapper once again is slightly faster than
the Rwrapper. The ratios show in figure \ref{n100rat} that the C
wrapper is roughly
\Sexpr{round(ratmns[ratmns$k==5 & ratmns$n==100, 5],2)} times faster
than the R wrapper wheb $k=5$, but this decreases to about
\Sexpr{round(ratmns[ratmns$k==13 & ratmns$n==100, 5],2)} times faster
when $k=13$. This decrease may continue as k gets large so that the R
wrapper actually becomes faster, but due to a suspected bug in the
gputools code the gpu will stop responding before it can fit all
possible models when $k$ is larger than 13 - making it impossible to get
even a single sample. As a result, we can only guess that the trend
continues beyond $k=13$.

\begin{figure}
  \centering
<<k5, fig.width=4, fig.height=4, out.width='.7\\textwidth', echo=F>>=
qplot(data=mns[mns$k==5,],x=n, y=elapstime, color=wrap, geom="line", log="x")
@
\caption{Time to fit (in seconds) vs. $n$ (log scale) by wrapper type,
  $k=5$.}
\label{k5}
\end{figure}

\begin{figure}
  \centering
<<k5rat, fig.width=4, fig.height=4, out.width='.7\\textwidth', echo=F>>=
qplot(data=ratmns[ratmns$k==5,],x=n, y=elapsratio, geom="line", log="x")
@
\caption{Ratio of R wrapper time to fit over C wrapper time to fit
  vs. $n$ (log scale) for $k=5$.}
\label{k5rat}
\end{figure}

\begin{figure}
  \centering
<<n100, fig.width=4, fig.height=4, out.width='.7\\textwidth', echo=F>>=
qplot(data=mns[mns$n==100,],x=k, y=elapstime, color=wrap, geom="line")
@
\caption{Time to fit (in seconds) vs. $k$ by wrapper type,
  $n=100$. Note that due to a suspected bug in gputools, k must be
  kept small.}
\label{n100}
\end{figure}

\begin{figure}
  \centering
<<n100rat, fig.width=4, fig.height=4, out.width='.7\\textwidth', echo=F>>=
qplot(data=ratmns[ratmns$n==100,],x=k, y=elapsratio, geom="line")
@
\caption{Ratio of R wrapper time to fit over C wrapper time to fit
  vs. $k$ for $n=100$.}
\label{n100rat}
\end{figure}

So for large $n$ it appears that the R wrapper is faster than the C
wrapper and for large $k$ these results suggest --- but do not show
--- that the R wrapper is faster. It's surprising that the R wrapper
is outperforming the C wrapper in any of the cases examined above. A
priori, there are several areas where we might expect the C wrapper to
speed up computation relative to the R wrapper. First, the R wrapper
has to deal with the overhead of repeatedly copying matrices from R
into C while the C wrapper only has to do this once. Second,
operations on the full model matrix to extract the appropriate
sub-matrix should run faster in R. The source of the R wrapper's
relative speed is unclear.

\end{document}
